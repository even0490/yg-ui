$font-family: #{"Helvetica Neue", Helvetica, STHeiTi, sans-serif};
// lin-height
$line-height: 1.5;
// 默认边框色
$border-color: #e8e8e8;
// 默认背景颜色
$bgcolor: #faf3ee;
// 默认文本颜色
$color: #333;
// 默认链接色
$link-color: #ad935d;
// 默认按钮颜色
$btcolor: #ad935d;

$media-types: (
  /* 视网膜屏定义，这里不做非常细节的界定，比如完全一致的整数倍*/
    /* retina1x：< 1.5dppx；*/ /* retina2x：1.5dppx ~ 2.49dppx*/
    /* retina3x：>= 2.5dppx*/ /* {String} 非视网膜屏*/ retina1x:
    "(max--moz-device-pixel-ratio: 1.49),
                (-webkit-max-device-pixel-ratio: 1.49),
                (max-device-pixel-ratio: 1.49),
                (max-resolution: 143dpi),
                (max-resolution: 1.49dppx)",
  /* {String} 视网膜屏2x*/ retina2x:
    "(min--moz-device-pixel-ratio: 1.5) and (max--moz-device-pixel-ratio: 2.49),
                (-webkit-min-device-pixel-ratio: 1.5) and (-webkit-max-device-pixel-ratio: 2.49),
                (min-device-pixel-ratio: 1.5) and (max-device-pixel-ratio: 2.49),
                (min-resolution: 144dpi) and (max-resolution: 239dpi),
                (min-resolution: 1.5dppx) and (max-resolution: 2.49dppx)",
  /* {String} 视网膜屏3x*/ retina3x:
    "(min--moz-device-pixel-ratio: 2.5),
                (-webkit-min-device-pixel-ratio: 2.5),
                (min-device-pixel-ratio: 2.5),
                (min-resolution: 240dpi),
                (min-resolution: 2.5dppx)"
);

/**
 * @module 功能
 * @description 定义响应式方案
 * @method responsive
 * @version 1.0.0
 * @param {String} $media 指定媒体查询条件，取值为`config`文件map `media-types`中的值 <1.0.0>
 */
@mixin responsive($media) {
  @if not map-has-key($media-types, $media) {
    @warn "#{$media} is not a known media type. Using portrait instead.";
    $media: portrait;
  }
  @media #{map-get($media-types, $media)} {
    @content;
  }
}

/**
 * @module 背景与边框
 * @description 为元素添加边框（包括1px边框）
 * @method border
 * @version 2.0.0
 * @param {String} $border-width 指定边框厚度（单位为px），默认值：1px，取值与`border-width`属性一致，不同方向代表边框位置 <2.0.0>
 * @param {String} $border-color 指定边框颜色 <2.0.0>
 * @param {String} $border-style 指定边框样式 <2.0.0>
 * @param {String} $radius 指定边框圆角半径，默认值：null <2.0.0>
 */
@mixin border(
  $border-width: 1px,
  $border-color: $border-color,
  $border-style: solid,
  $radius: null
) {
  // 为边框位置提供定位参考
  position: relative;
  @if $border-width == null {
    $border-width: 0;
  }
  border-radius: $radius;
  &::after {
    // 用以解决边框layer遮盖内容
    pointer-events: none;
    position: absolute;
    z-index: 999;
    top: 0;
    left: 0;
    overflow: hidden;
    content: "\0020";
    border-color: $border-color;
    border-style: $border-style;
    border-width: $border-width;
    transform-origin: 0 0;
    // 适配dpr进行缩放
    @include responsive(retina1x) {
      width: 100%;
      height: 100%;
      @if $radius != null {
        border-radius: $radius;
      }
    }
    @include responsive(retina2x) {
      width: 200%;
      height: 200%;
      transform: scale(0.5);
      @if $radius != null {
        border-radius: $radius * 2;
      }
    }
    @include responsive(retina3x) {
      width: 300%;
      height: 300%;
      transform: scale(0.33333);
      @if $radius != null {
        border-radius: $radius * 3;
      }
    }
  }
}
